{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f955c437828ea04b469c960d90531b67f29f6e944af5308db375407a9383a5be64736f6c634300081a0033",
			"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 SSTORE 0xC4 CALLDATACOPY DUP3 DUP15 LOG0 0x4B CHAINID SWAP13 SWAP7 0xD SWAP1 MSTORE8 SHL PUSH8 0xF29F6E944AF5308D 0xB3 PUSH22 0x407A9383A5BE64736F6C634300081A00330000000000 ",
			"sourceMap": "350:54903:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;350:54903:0;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f955c437828ea04b469c960d90531b67f29f6e944af5308db375407a9383a5be64736f6c634300081a0033",
			"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 SSTORE 0xC4 CALLDATACOPY DUP3 DUP15 LOG0 0x4B CHAINID SWAP13 SWAP7 0xD SWAP1 MSTORE8 SHL PUSH8 0xF29F6E944AF5308D 0xB3 PUSH22 0x407A9383A5BE64736F6C634300081A00330000000000 ",
			"sourceMap": "350:54903:0:-:0;;;;;;;;"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "17000",
				"executionCost": "96",
				"totalCost": "17096"
			},
			"internal": {
				"abs(int256)": "infinite",
				"avg(int256,int256)": "infinite",
				"avg(uint256,uint256)": "infinite",
				"cbrt(uint256)": "infinite",
				"cbrtWad(uint256)": "infinite",
				"clamp(int256,int256,int256)": "infinite",
				"clamp(uint256,uint256,uint256)": "infinite",
				"coalesce(address,address)": "infinite",
				"coalesce(bytes32,bytes32)": "infinite",
				"coalesce(uint256,uint256)": "infinite",
				"dist(int256,int256)": "infinite",
				"dist(uint256,uint256)": "infinite",
				"divUp(uint256,uint256)": "infinite",
				"divWad(uint256,uint256)": "infinite",
				"divWadUp(uint256,uint256)": "infinite",
				"expWad(int256)": "infinite",
				"factorial(uint256)": "infinite",
				"fullMulDiv(uint256,uint256,uint256)": "infinite",
				"fullMulDivN(uint256,uint256,uint8)": "infinite",
				"fullMulDivUnchecked(uint256,uint256,uint256)": "infinite",
				"fullMulDivUp(uint256,uint256,uint256)": "infinite",
				"fullMulEq(uint256,uint256,uint256,uint256)": "infinite",
				"gcd(uint256,uint256)": "infinite",
				"invMod(uint256,uint256)": "infinite",
				"isEven(uint256)": "infinite",
				"lambertW0Wad(int256)": "infinite",
				"lerp(int256,int256,int256,int256,int256)": "infinite",
				"lerp(uint256,uint256,uint256,uint256,uint256)": "infinite",
				"lnWad(int256)": "infinite",
				"log10(uint256)": "infinite",
				"log10Up(uint256)": "infinite",
				"log2(uint256)": "infinite",
				"log256(uint256)": "infinite",
				"log256Up(uint256)": "infinite",
				"log2Up(uint256)": "infinite",
				"max(int256,int256)": "infinite",
				"max(uint256,uint256)": "infinite",
				"min(int256,int256)": "infinite",
				"min(uint256,uint256)": "infinite",
				"mulDiv(uint256,uint256,uint256)": "infinite",
				"mulDivUp(uint256,uint256,uint256)": "infinite",
				"mulWad(uint256,uint256)": "infinite",
				"mulWadUp(uint256,uint256)": "infinite",
				"packSci(uint256)": "infinite",
				"powWad(int256,int256)": "infinite",
				"rawAdd(int256,int256)": "infinite",
				"rawAdd(uint256,uint256)": "infinite",
				"rawAddMod(uint256,uint256,uint256)": "infinite",
				"rawDiv(uint256,uint256)": "infinite",
				"rawDivWad(uint256,uint256)": "infinite",
				"rawDivWadUp(uint256,uint256)": "infinite",
				"rawMod(uint256,uint256)": "infinite",
				"rawMul(int256,int256)": "infinite",
				"rawMul(uint256,uint256)": "infinite",
				"rawMulMod(uint256,uint256,uint256)": "infinite",
				"rawMulWad(uint256,uint256)": "infinite",
				"rawMulWadUp(uint256,uint256)": "infinite",
				"rawSDiv(int256,int256)": "infinite",
				"rawSDivWad(int256,int256)": "infinite",
				"rawSMod(int256,int256)": "infinite",
				"rawSMulWad(int256,int256)": "infinite",
				"rawSub(int256,int256)": "infinite",
				"rawSub(uint256,uint256)": "infinite",
				"rpow(uint256,uint256,uint256)": "infinite",
				"sDivWad(int256,int256)": "infinite",
				"sMulWad(int256,int256)": "infinite",
				"saturatingAdd(uint256,uint256)": "infinite",
				"saturatingMul(uint256,uint256)": "infinite",
				"saturatingSub(uint256,uint256)": "infinite",
				"sci(uint256)": "infinite",
				"sqrt(uint256)": "infinite",
				"sqrtWad(uint256)": "infinite",
				"ternary(bool,address,address)": "infinite",
				"ternary(bool,bytes32,bytes32)": "infinite",
				"ternary(bool,uint256,uint256)": "infinite",
				"unpackSci(uint256)": "infinite",
				"zeroFloorSub(uint256,uint256)": "infinite"
			}
		},
		"methodIdentifiers": {}
	},
	"abi": [
		{
			"inputs": [],
			"name": "DivFailed",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "DivWadFailed",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "ExpOverflow",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "FactorialOverflow",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "FullMulDivFailed",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "LnWadUndefined",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "MantissaOverflow",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "MulDivFailed",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "MulWadFailed",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "OutOfDomain",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "RPowOverflow",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "SDivWadFailed",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "SMulWadFailed",
			"type": "error"
		}
	]
}